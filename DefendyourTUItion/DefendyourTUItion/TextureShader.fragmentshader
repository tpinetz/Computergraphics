 #version 330 core
in vec2 TexCoord;
in vec3 FragPos;
in vec3 Normal;

out vec4 color;

uniform sampler2D ourTexture;
uniform vec3 lightColor;
uniform vec3 lightPos0;
uniform vec3 ambient0;
uniform vec3 diffuse0;
uniform vec3 specular0; 
uniform vec3 viewPos;

void main(){
    float ambientStrength = 0.1f;
	float specularStrength = 0.5f;
    vec3 ambient = ambientStrength * lightColor;

	vec3 norm = normalize(Normal);
	vec3 lightDir = normalize(lightPos0 - FragPos);  

	vec3 viewDir = normalize(viewPos - FragPos);
	vec3 reflectDir = reflect(-lightDir, norm);  

	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;

	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
	vec3 specular = specularStrength * spec * lightColor;  

	color = vec4((ambient0 * ambient + diffuse0*diffuse + specular0*specular), 1.0f) * texture(ourTexture, TexCoord);
}