 #version 330 core


const int MAX_BONES = 100;

uniform mat4 modelView;
uniform mat4 Projection;
uniform mat4 gBones[MAX_BONES];

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 texCoord;
layout(location = 3) in ivec4 glBoneIDs;
layout(location = 4) in vec4 glWeights;

out vec2 TexCoords;
out vec3 FragPos;
out vec3 Normal;
out vec4 FragPosLightSpace;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 lightSpaceMatrix;


void main(void){
	mat4 BoneTransform = gBones[glBoneIDs[0]] * glWeights[0];
			BoneTransform += gBones[glBoneIDs[1]] * glWeights[1];
			BoneTransform += gBones[glBoneIDs[2]] * glWeights[2];
			BoneTransform += gBones[glBoneIDs[3]] * glWeights[3];

	gl_Position = projection * view * model * BoneTransform * vec4(position, 1.0f);
    FragPos = vec3(model * vec4(position, 1.0f));
	TexCoords = vec2(texCoord.x, texCoord.y);
	Normal = mat3(transpose(inverse(model * BoneTransform))) * normal;  
    FragPosLightSpace = lightSpaceMatrix * vec4(FragPos, 1.0);
}